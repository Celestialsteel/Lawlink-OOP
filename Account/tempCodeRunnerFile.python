# Question
# i. Plot Hours Coding (x − axis) vs Num Bugs(y − axis).

import matplotlib.pyplot as plt
import numpy as np

#x-axis values
hours_coding = [10.7, 24.8, 19.4, 16.2, 5.3, 5.3, 2.9, 22.7, 16.2, 18.8, 2, 25.3, 21.9, 6.7, 6, 6, 9, 14.4, 12.1, 8.6, 16.5, 4.9, 8.7, 10.5, 12.7, 20.7, 6.4, 14.1, 16, 2.6, 16.4, 5.7, 3.1, 24.7, 25.2, 21.3, 9, 3.9, 18.3, 12.3, 4.5, 13.6, 2.3, 23.8, 7.8, 17.7, 9.1, 14.2, 14.9, 6]
#y-axis values
num_bugs = [25, 50, 38, 31, 3, 7, 3, 51, 34, 29, 6, 49, 40, 16, 17, 17, 14, 27, 26, 22, 31, 9, 12, 15, 29, 48, 12, 33, 34, 2, 35, 19, 6, 57, 37, 47, 18, 6, 37, 15, 8, 29, 12, 45, 12, 33, 23, 30, 27, 15]

# setting x  & y range/limits
plt.xlim(0, 30)
plt.ylim(0, 60)

# Plot
plt.figure(figsize=(10, 7)) # larger size for clarity
plt.scatter(hours_coding, num_bugs, label='Hours Coding vs Num Bugs', color='red', marker='*', s=30)

# regression line
m, b = np.polyfit(hours_coding, num_bugs, 1)
plt.plot(hours_coding, [m*x + b for x in hours_coding], color='black', linestyle='-', label='Regression Line')

#Labels & title
plt.xlabel('Hours Coding')
plt.ylabel('Num Bugs')
plt.title('Hours Coding vs Num Bugs')
plt.grid(True, linestyle='--', color='green', alpha=0.5) # grid

plt.tight_layout() # to ensure labels don't get cut off
# plt.savefig('coding_bugs_graph.png') # save graph
plt.legend() # display legend
plt.show() #* show plot